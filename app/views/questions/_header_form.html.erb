<div data-controller="toggle-form">
  <%= render ToggleComponent.new(text: "Header", value: f.object.header&.persisted?, input_html: { data: { action: "change->toggle-form#updateVisibility", toggle_form_target: "input" } }) %>
  <div data-toggle-form-target="wrapper">
    <%= f.simple_fields_for :header do |form| %>
      <% if form.object.persisted? %>
        <%= form.input :id, as: :hidden, input_html: { data: { toggle_form_target: "exclude" } } %>
        <%= form.input :_destroy, as: :hidden, input_html: { data: { toggle_form_target: "destroy exclude" } } %>
      <% end %>
      <div data-controller="visibility" data-visibility-rules-value='{"headerFile": "image", "headerText": "text"}'>
        <%= form.input :header_type, as: :enum, input_html: { data: { action: "change->visibility#updateElementVisibility" }, disabled: true } %>
        <div data-visibility-target="element" data-element-id="headerFile">
          <%= form.input :file, as: :image, label: "Header Image", input_html: { accept: "image/*", disabled: "disabled" } %>
        </div>
        <div data-visibility-target="element" data-element-id="headerText" data-controller="character-counter" data-character-counter-countdown-value="true">
          <%= form.input :text, label: "Header Text", input_html: { data: { character_counter_target: "input" }, maxlength: 20, disabled: true } %>
          <p class="text-white text-sm flex justify-end">There are  <strong data-character-counter-target="counter" class="mx-1"></strong>  characters remaining.</p>
        </div>
      </div>
    <% end %>
  </div>
</div>
